SPO coe_xfr_sql_profile_9j820km30uynd_2069803848.log;
SET ECHO ON TERM ON LIN 2000 TRIMS ON NUMF 99999999999999999999;
REM
REM $Header: 215187.1 coe_xfr_sql_profile_9j820km30uynd_2069803848.sql 11.4.4.4 2013/08/31 carlos.sierra $
REM
REM Copyright (c) 2000-2012, Oracle Corporation. All rights reserved.
REM
REM AUTHOR
REM   carlos.sierra@oracle.com
REM
REM SCRIPT
REM   coe_xfr_sql_profile_9j820km30uynd_2069803848.sql
REM
REM DESCRIPTION
REM   This script is generated by coe_xfr_sql_profile.sql
REM   It contains the SQL*Plus commands to create a custom
REM   SQL Profile for SQL_ID 9j820km30uynd based on plan hash
REM   value 2069803848.
REM   The custom SQL Profile to be created by this script
REM   will affect plans for SQL commands with signature
REM   matching the one for SQL Text below.
REM   Review SQL Text and adjust accordingly.
REM
REM PARAMETERS
REM   None.
REM
REM EXAMPLE
REM   SQL> START coe_xfr_sql_profile_9j820km30uynd_2069803848.sql;
REM
REM NOTES
REM   1. Should be run as SYSTEM or SYSDBA.
REM   2. User must have CREATE ANY SQL PROFILE privilege.
REM   3. SOURCE and TARGET systems can be the same or similar.
REM   4. To drop this custom SQL Profile after it has been created:
REM      EXEC DBMS_SQLTUNE.DROP_SQL_PROFILE('coe_9j820km30uynd_2069803848');
REM   5. Be aware that using DBMS_SQLTUNE requires a license
REM      for the Oracle Tuning Pack.
REM   6. If you modified a SQL putting Hints in order to produce a desired
REM      Plan, you can remove the artifical Hints from SQL Text pieces below.
REM      By doing so you can create a custom SQL Profile for the original
REM      SQL but with the Plan captured from the modified SQL (with Hints).
REM
WHENEVER SQLERROR EXIT SQL.SQLCODE;
REM
VAR signature NUMBER;
VAR signaturef NUMBER;
REM
DECLARE
sql_txt CLOB;
h       SYS.SQLPROF_ATTR;
PROCEDURE wa (p_line IN VARCHAR2) IS
BEGIN
DBMS_LOB.WRITEAPPEND(sql_txt, LENGTH(p_line), p_line);
END wa;
BEGIN
DBMS_LOB.CREATETEMPORARY(sql_txt, TRUE);
DBMS_LOB.OPEN(sql_txt, DBMS_LOB.LOB_READWRITE);
-- SQL Text pieces below do not have to be of same length.
-- So if you edit SQL Text (i.e. removing temporary Hints),
-- there is no need to edit or re-align unmodified pieces.
wa(q'[SELECT ch.channel_class, c.cust_city, t.calendar_quarter_desc,
 ]');
wa(q'[  SUM(s.amount_sold) sales_amount
FROM sales s, times t, custome]');
wa(q'[rs c, channels ch
WHERE s.time_id = t.time_id
AND   s.cust_id = ]');
wa(q'[c.cust_id
AND   s.channel_id = ch.channel_id
AND   c.cust_state_]');
wa(q'[province = 'CA'
AND   ch.channel_desc in ('Internet','Catalog')
]');
wa(q'[AND   t.calendar_quarter_desc IN ('1999-01','1999-02')
GROUP BY ]');
wa(q'[ch.channel_class, c.cust_city, t.calendar_quarter_desc ]');
DBMS_LOB.CLOSE(sql_txt);
h := SYS.SQLPROF_ATTR(
q'[BEGIN_OUTLINE_DATA]',
q'[IGNORE_OPTIM_EMBEDDED_HINTS]',
q'[OPTIMIZER_FEATURES_ENABLE('11.2.0.1')]',
q'[DB_VERSION('11.2.0.1')]',
q'[OPT_PARAM('star_transformation_enabled' 'true')]',
q'[ALL_ROWS]',
q'[OUTLINE_LEAF(@"SEL$F6045C7B")]',
q'[OUTLINE_LEAF(@"SEL$ACF30367")]',
q'[OUTLINE_LEAF(@"SEL$6EE793B7")]',
q'[OUTLINE_LEAF(@"SEL$E1F9C76C")]',
q'[OUTLINE_LEAF(@"SEL$10DF2C2C")]',
q'[OUTLINE(@"SEL$1")]',
q'[OUTLINE(@"SEL$5208623C")]',
q'[STAR_TRANSFORMATION(@"SEL$1" "S"@"SEL$1" SUBQUERIES(("T"@"SEL$1") ("CH"@"SEL$1") TEMP_TABLE("C"@"SEL$1")))]',
q'[BITMAP_TREE(@"SEL$10DF2C2C" "S"@"SEL$1" AND(("SALES"."CHANNEL_ID") ("SALES"."TIME_ID") ("SALES"."CUST_ID")))]',
q'[FULL(@"SEL$10DF2C2C" "T1"@"SEL$9C741BEB")]',
q'[FULL(@"SEL$10DF2C2C" "CH"@"SEL$1")]',
q'[FULL(@"SEL$10DF2C2C" "T"@"SEL$1")]',
q'[LEADING(@"SEL$10DF2C2C" "S"@"SEL$1" "T1"@"SEL$9C741BEB" "CH"@"SEL$1" "T"@"SEL$1")]',
q'[SUBQUERY_PRUNING(@"SEL$10DF2C2C" "S"@"SEL$1" PARTITION)]',
q'[USE_HASH(@"SEL$10DF2C2C" "T1"@"SEL$9C741BEB")]',
q'[USE_HASH(@"SEL$10DF2C2C" "CH"@"SEL$1")]',
q'[USE_HASH(@"SEL$10DF2C2C" "T"@"SEL$1")]',
q'[SWAP_JOIN_INPUTS(@"SEL$10DF2C2C" "CH"@"SEL$1")]',
q'[SWAP_JOIN_INPUTS(@"SEL$10DF2C2C" "T"@"SEL$1")]',
q'[USE_HASH_AGGREGATION(@"SEL$10DF2C2C")]',
q'[FULL(@"SEL$E1F9C76C" "T1"@"SEL$E1F9C76C")]',
q'[SEMIJOIN_DRIVER(@"SEL$E1F9C76C")]',
q'[FULL(@"SEL$6EE793B7" "CH"@"SEL$6EE793B7")]',
q'[SEMIJOIN_DRIVER(@"SEL$6EE793B7")]',
q'[FULL(@"SEL$ACF30367" "T"@"SEL$ACF30367")]',
q'[SEMIJOIN_DRIVER(@"SEL$ACF30367")]',
q'[FULL(@"SEL$F6045C7B" "C"@"SEL$F6045C7B")]',
q'[SEMIJOIN_DRIVER(@"SEL$F6045C7B")]',
q'[END_OUTLINE_DATA]');
:signature := DBMS_SQLTUNE.SQLTEXT_TO_SIGNATURE(sql_txt);
:signaturef := DBMS_SQLTUNE.SQLTEXT_TO_SIGNATURE(sql_txt, TRUE);
DBMS_SQLTUNE.IMPORT_SQL_PROFILE (
sql_text    => sql_txt,
profile     => h,
name        => 'coe_9j820km30uynd_2069803848',
description => 'coe 9j820km30uynd 2069803848 '||:signature||' '||:signaturef||'',
category    => 'DEFAULT',
validate    => TRUE,
replace     => TRUE,
force_match => FALSE /* TRUE:FORCE (match even when different literals in SQL). FALSE:EXACT (similar to CURSOR_SHARING) */ );
DBMS_LOB.FREETEMPORARY(sql_txt);
END;
/
WHENEVER SQLERROR CONTINUE
SET ECHO OFF;
PRINT signature
PRINT signaturef
PRO
PRO ... manual custom SQL Profile has been created
PRO
SET TERM ON ECHO OFF LIN 80 TRIMS OFF NUMF "";
SPO OFF;
PRO
PRO COE_XFR_SQL_PROFILE_9j820km30uynd_2069803848 completed
