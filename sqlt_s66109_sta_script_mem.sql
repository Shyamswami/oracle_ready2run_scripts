/*****************************************************************
* Be aware that using SQL Tuning Advisor (STA) DBMS_SQLTUNE
* requires a license for the Oracle Tuning Pack.
* If you need to disable SQLT access to this functionality
* execute the following command connected as sysdba:
* SQL> EXEC SQLTXADMIN.sqlt$a.set_param('sql_tuning_advisor', 'N');
*****************************************************************/

-----------------------------------------------------------------
-- Script generated by DBMS_SQLTUNE package, advisor framework --
-- Use this script to implement some of the recommendations    --
-- made by the SQL tuning advisor.                             --
--                                                             --
-- NOTE: this script may need to be edited for your system     --
--       (index names, privileges, etc) before it is executed. --
-----------------------------------------------------------------
execute dbms_stats.gather_index_stats(ownname => 'TARGET_DW', indname => 'CUSTOMER_DIM_IF30', estimate_percent => DBMS_STATS.AUTO_SAMPLE_SIZE);
execute dbms_stats.gather_index_stats(ownname => 'TARGET_DW', indname => 'CUSTOMER_DIM_MASTSPECATTR_IDX', estimate_percent => DBMS_STATS.AUTO_SAMPLE_SIZE);
execute dbms_stats.gather_index_stats(ownname => 'TARGET_DW', indname => 'CUSTOMER_DIM_SPECATTR_IDX', estimate_percent => DBMS_STATS.AUTO_SAMPLE_SIZE);
execute dbms_sqltune.accept_sql_profile(task_name => 'sqlt_s66109_mem', replace => TRUE);

/*****************************************************************
* Be aware that using SQL Tuning Advisor (STA) DBMS_SQLTUNE
* requires a license for the Oracle Tuning Pack.
* If you need to disable SQLT access to this functionality
* execute the following command connected as sysdba:
* SQL> EXEC SQLTXADMIN.sqlt$a.set_param('sql_tuning_advisor', 'N');
*****************************************************************/
